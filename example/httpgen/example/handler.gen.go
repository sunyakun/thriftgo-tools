// Code generated by thriftgo-tools v0.0.1. DO NOT EDIT.
package example

import (
	"net/http"

	"github.com/bytedance/go-tagexpr/v2/binding"
	"github.com/gin-gonic/gin"
)

type Handler struct {
	service ExampleService
}

func NewHandler(service ExampleService) *Handler {
	return &Handler{service: service}
}

func (h *Handler) Get(ctx *gin.Context) {
	var err error
	var req GetExampleRequest
	err = binding.BindAndValidate(&req, ctx.Request, ctx.Params)
	if err != nil {
		ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	resp, err := h.service.Get(ctx, &req)
	if err != nil {
		return
	}

	ctx.JSON(http.StatusOK, resp)
}

func (h *Handler) Create(ctx *gin.Context) {
	var err error
	var req CreateExampleRequest
	err = binding.BindAndValidate(&req, ctx.Request, ctx.Params)
	if err != nil {
		ctx.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	resp, err := h.service.Create(ctx, &req)
	if err != nil {
		return
	}

	ctx.JSON(http.StatusOK, resp)
}
